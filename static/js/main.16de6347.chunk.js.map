{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","className","href","TodoInfo","todo","title","user","TodoList","todos","map","classNames","completed","getUser","userId","usersFromServer","find","App","useState","selectedUserId","setUser","setTitle","allTodos","setTodo","formValid","setValid","newId","forEach","action","method","onSubmit","event","preventDefault","newTodo","type","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16de6347.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\nexport const UserInfo: React.FC<User> = ({ name, username, email }) => (\n  <>\n    <strong>\n      Name\n    </strong>\n    {': '}\n    {name}\n    <br />\n    <strong>\n      User Name\n    </strong>\n    {': '}\n    {username}\n    <br />\n    Email\n    {': '}\n    <a className=\"UserInfo\" href={email}>\n      {email}\n    </a>\n  </>\n);\n","import { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <>\n    <h2\n      className=\"TodoInfo__title\"\n      data-id={todo.id}\n    >\n      {todo.title}\n    </h2>\n\n    {todo.user && (<UserInfo {...todo.user} />)}\n  </>\n);\n","import classNames from 'classnames';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <article\n        key={todo.id}\n        className={classNames('TodoInfo',\n          { 'TodoInfo--completed': todo.completed === true })}\n      >\n        <TodoInfo todo={todo} />\n      </article>\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nconst getUser = (userId: number): User | null => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [selectedUserId, setUser] = useState(0);\n  const [title, setTitle] = useState('');\n  const [allTodos, setTodo] = useState(todos);\n  const [formValid, setValid] = useState(true);\n\n  // eslint-disable-next-line prefer-const\n  let newId = 0;\n\n  allTodos.forEach(todo => {\n    if (newId < todo.id) {\n      newId = todo.id + 1;\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          const newTodo = {\n            id: newId,\n            title,\n            completed: false,\n            userId: selectedUserId,\n            user: getUser(selectedUserId),\n          };\n\n          if (selectedUserId === 0 || title === '') {\n            setValid(false);\n\n            return;\n          }\n\n          setValid(true);\n\n          setTodo([...allTodos, newTodo]);\n          setUser(0);\n          setTitle('');\n        }}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n            }}\n          />\n          {!formValid\n          && (title !== ''\n          || <span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={(event) => {\n              setUser(+event.target.value);\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                key={user.username}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {!formValid\n          && (selectedUserId !== 0\n          || <span className=\"error\">Please enter a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={allTodos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}